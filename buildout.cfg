
[buildout]
parts =
    pixman
    cairo
    py2cairo-sources
    graphite
    graphite-packages
    nodejs
    carbon.conf
    storage-schemas.conf
    local_settings.py
    syncdb
    statsd
    supervisord.conf
    supervisor
unzip = true
newest = false
index = http://pypi.python.org/simple/
download-cache = ${buildout:directory}/download
edit-warning = DO NOT EDIT THIS GENERATED FILE! Edit the .tmpl file instead.

[pixman]
recipe = hexagonit.recipe.cmmi
url = http://cairographics.org/releases/pixman-0.26.2.tar.gz
md5sum = 276242da5b3af1258d072cf205d18f0b

[cairo]
recipe = hexagonit.recipe.cmmi
url = http://fossies.org/unix/misc/cairo-1.12.2.tar.gz
md5sum = e3ec34b4087f41c67d69e49e108d5fe2
environment-section = cairo-env

[cairo-env]
LD_RUN_PATH = ${pixman:location}/lib
PKG_CONFIG_PATH = ${pixman:location}/lib/pkgconfig

[py2cairo-sources]
recipe = hexagonit.recipe.download
url = http://cairographics.org/releases/py2cairo-1.10.0.tar.bz2
md5sum = 20337132c4ab06c1146ad384d55372c5
strip-top-level-dir = true

[graphite]
recipe = gp.recipe.pip
virtualenv = ${buildout:directory}/parts/graphite
storage = ${buildout:directory}/var/graphite

[graphite-packages]
recipe = collective.recipe.cmd
on_install = true
on_update = true
venv = ${graphite:virtualenv}
cmds =
    cd '${:venv}'
    bin/pip install Django django-tagging zope.interface Twisted txAMQP whisper
    if [ ! -d lib/carbon ] ; then
        bin/pip install carbon \
            --install-option=--prefix='${:venv}' \
            --install-option=--install-lib='${:venv}/lib'
    fi
    if [ ! -d webapp/graphite ] ; then
        bin/pip install graphite-web \
            --install-option=--prefix='${:venv}' \
            --install-option=--install-lib='${:venv}/webapp'
    fi
    if [ ! -d lib/python*/site-packages/cairo ] ; then
        cd '${py2cairo-sources:destination}'
        LD_RUN_PATH='${cairo:location}/lib:${pixman:location}/lib'
        PKG_CONFIG_PATH='${cairo:location}/lib/pkgconfig:${pixman:location}/lib/pkgconfig'
        export LD_RUN_PATH PKG_CONFIG_PATH
        '${:venv}/bin/python' waf configure --prefix='${:venv}'
        '${:venv}/bin/python' waf build
        '${:venv}/bin/python' waf install
        cd '${:venv}'
    fi

[nodejs]
recipe = hexagonit.recipe.cmmi
url = http://nodejs.org/dist/v0.8.8/node-v0.8.8.tar.gz
md5sum = f4dae84e96a94b768404c14633bccd49

[carbon.conf]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/carbon.conf.tmpl
output = ${graphite:virtualenv}/conf/carbon.conf

[storage-schemas.conf]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/storage-schemas.conf.tmpl
output = ${graphite:virtualenv}/conf/storage-schemas.conf

[local_settings.py]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/local_settings.py.tmpl
output = ${graphite:virtualenv}/webapp/graphite/local_settings.py

[syncdb]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    mkdir -p '${graphite:storage}/lists'
    mkdir -p '${graphite:storage}/rrd'
    mkdir -p '${graphite:storage}/whisper'
    mkdir -p '${buildout:directory}/var/log/graphite'
    mkdir -p '${buildout:directory}/var/run'
    if [ ! -e '${graphite:storage}/graphite.db' ] ; then
        cd '${graphite:virtualenv}/webapp/graphite'
        # The next line creates the database and prompts for an admin password.
        '${graphite:virtualenv}/bin/python' manage.py syncdb
    fi

[statsd]
recipe = hexagonit.recipe.download
url = https://github.com/etsy/statsd/tarball/v0.5.0
md5sum = 8a457380cba03bdbfe30979b3185ded4
strip-top-level-dir = true

[supervisord.conf]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/supervisord.conf.tmpl
output = ${buildout:directory}/etc/supervisord.conf
graphite_addr = 0.0.0.0:8083

[supervisor]
recipe = zc.recipe.egg
